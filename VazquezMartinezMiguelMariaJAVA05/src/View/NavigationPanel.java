/**
* 
* @author Miguel Maria Vazquez Martinez
* Fifth practice of module PMDM.
* 
*/

package View;

import Controller.ListQuery;
import Controller.NavigationQuery;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class NavigationPanel extends javax.swing.JPanel {

    public NavigationPanel() {
        /**
         * The constructor of this class create a new object of the combo box model,
         * charge the arraylist List with all the surnames of the table to create a combobox
         * surname filter and start the cursor of the data base.
         */
        initComponents();
        model = new DefaultComboBoxModel();
        myList = ListQuery.getDBField("SELECT DISTINCT apellido FROM empleado ORDER BY apellido");
        surnamerComboBoxNav.setModel(chargeSurnameFilter());
        
        NavigationQuery.startNavigation();
        resetNavigation();
        showEmployee();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        nameLabelNav = new javax.swing.JLabel();
        surnameLabelNav = new javax.swing.JLabel();
        salaryLabelNav = new javax.swing.JLabel();
        maxSalaryLabelNav = new javax.swing.JLabel();
        entryDateLabelNav = new javax.swing.JLabel();
        nameFieldNav = new javax.swing.JTextField();
        surnameFieldNav = new javax.swing.JTextField();
        salaryFieldNav = new javax.swing.JTextField();
        maxSalaryFieldNav = new javax.swing.JTextField();
        entryDateFieldNav = new javax.swing.JTextField();
        surnamerComboBoxNav = new javax.swing.JComboBox<>();
        filterButtonNav = new javax.swing.JButton();
        pictureLabetNav = new javax.swing.JLabel();
        headerLabelNav = new javax.swing.JLabel();
        goBackButtonNav = new javax.swing.JButton();
        moveForwardButtonNav = new javax.swing.JButton();
        clearButtonNav = new javax.swing.JButton();
        numberLabelNav = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));
        setMaximumSize(new java.awt.Dimension(600, 500));
        setMinimumSize(new java.awt.Dimension(600, 500));
        setPreferredSize(new java.awt.Dimension(600, 500));

        nameLabelNav.setBackground(new java.awt.Color(255, 255, 255));
        nameLabelNav.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        nameLabelNav.setForeground(new java.awt.Color(0, 0, 0));
        nameLabelNav.setText("Nombre:");

        surnameLabelNav.setBackground(new java.awt.Color(255, 255, 255));
        surnameLabelNav.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        surnameLabelNav.setForeground(new java.awt.Color(0, 0, 0));
        surnameLabelNav.setText("Apellido:");

        salaryLabelNav.setBackground(new java.awt.Color(255, 255, 255));
        salaryLabelNav.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        salaryLabelNav.setForeground(new java.awt.Color(0, 0, 0));
        salaryLabelNav.setText("Sueldo:");

        maxSalaryLabelNav.setBackground(new java.awt.Color(255, 255, 255));
        maxSalaryLabelNav.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        maxSalaryLabelNav.setForeground(new java.awt.Color(0, 0, 0));
        maxSalaryLabelNav.setText("Sueldo m√°ximo:");

        entryDateLabelNav.setBackground(new java.awt.Color(255, 255, 255));
        entryDateLabelNav.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        entryDateLabelNav.setForeground(new java.awt.Color(0, 0, 0));
        entryDateLabelNav.setText("Fecha alta:");

        nameFieldNav.setBackground(new java.awt.Color(204, 204, 204));
        nameFieldNav.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nameFieldNav.setForeground(new java.awt.Color(0, 0, 0));

        surnameFieldNav.setBackground(new java.awt.Color(204, 204, 204));
        surnameFieldNav.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        surnameFieldNav.setForeground(new java.awt.Color(0, 0, 0));

        salaryFieldNav.setBackground(new java.awt.Color(204, 204, 204));
        salaryFieldNav.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        salaryFieldNav.setForeground(new java.awt.Color(0, 0, 0));

        maxSalaryFieldNav.setBackground(new java.awt.Color(204, 204, 204));
        maxSalaryFieldNav.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        maxSalaryFieldNav.setForeground(new java.awt.Color(0, 0, 0));

        entryDateFieldNav.setBackground(new java.awt.Color(204, 204, 204));
        entryDateFieldNav.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        entryDateFieldNav.setForeground(new java.awt.Color(0, 0, 0));

        surnamerComboBoxNav.setBackground(new java.awt.Color(204, 204, 204));
        surnamerComboBoxNav.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        surnamerComboBoxNav.setForeground(new java.awt.Color(0, 0, 0));
        surnamerComboBoxNav.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        surnamerComboBoxNav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surnamerComboBoxNavActionPerformed(evt);
            }
        });

        filterButtonNav.setBackground(new java.awt.Color(255, 255, 255));
        filterButtonNav.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        filterButtonNav.setForeground(new java.awt.Color(0, 0, 0));
        filterButtonNav.setText("Filtrar");
        filterButtonNav.setPreferredSize(new java.awt.Dimension(100, 30));
        filterButtonNav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonNavActionPerformed(evt);
            }
        });

        pictureLabetNav.setBackground(new java.awt.Color(204, 204, 204));
        pictureLabetNav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pictureLabetNav.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pictureLabetNav.setMaximumSize(new java.awt.Dimension(172, 172));
        pictureLabetNav.setMinimumSize(new java.awt.Dimension(137, 137));
        pictureLabetNav.setPreferredSize(new java.awt.Dimension(172, 172));

        headerLabelNav.setBackground(new java.awt.Color(255, 255, 255));
        headerLabelNav.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        headerLabelNav.setForeground(new java.awt.Color(0, 0, 0));
        headerLabelNav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLabelNav.setText("EMPLEADOS");
        headerLabelNav.setMaximumSize(new java.awt.Dimension(200, 30));
        headerLabelNav.setMinimumSize(new java.awt.Dimension(200, 30));
        headerLabelNav.setPreferredSize(new java.awt.Dimension(200, 30));

        goBackButtonNav.setBackground(new java.awt.Color(255, 255, 255));
        goBackButtonNav.setForeground(new java.awt.Color(0, 0, 0));
        goBackButtonNav.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/leftArrow.png"))); // NOI18N
        goBackButtonNav.setPreferredSize(new java.awt.Dimension(100, 30));
        goBackButtonNav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonNavActionPerformed(evt);
            }
        });

        moveForwardButtonNav.setBackground(new java.awt.Color(255, 255, 255));
        moveForwardButtonNav.setForeground(new java.awt.Color(0, 0, 0));
        moveForwardButtonNav.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/rightArrow.png"))); // NOI18N
        moveForwardButtonNav.setPreferredSize(new java.awt.Dimension(100, 30));
        moveForwardButtonNav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveForwardButtonNavActionPerformed(evt);
            }
        });

        clearButtonNav.setBackground(new java.awt.Color(255, 255, 255));
        clearButtonNav.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        clearButtonNav.setForeground(new java.awt.Color(0, 0, 0));
        clearButtonNav.setText("Limpiar");
        clearButtonNav.setPreferredSize(new java.awt.Dimension(100, 30));
        clearButtonNav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonNavActionPerformed(evt);
            }
        });

        numberLabelNav.setBackground(new java.awt.Color(204, 204, 204));
        numberLabelNav.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        numberLabelNav.setForeground(new java.awt.Color(0, 0, 0));
        numberLabelNav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numberLabelNav.setText("Number");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(headerLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(50, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(goBackButtonNav, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(moveForwardButtonNav, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clearButtonNav, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(filterButtonNav, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(surnamerComboBoxNav, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(numberLabelNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pictureLabetNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(entryDateLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(entryDateFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(maxSalaryLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(maxSalaryFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nameFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(surnameLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(surnameFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(salaryLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(salaryFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(headerLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pictureLabetNav, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(surnameLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(surnameFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salaryLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salaryFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maxSalaryLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maxSalaryFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(entryDateLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(entryDateFieldNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0)
                .addComponent(numberLabelNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surnamerComboBoxNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterButtonNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clearButtonNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goBackButtonNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moveForwardButtonNav, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void filterButtonNavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonNavActionPerformed
        /**
         * THis method send to NavigationQuery class the new query with the surname
         * selected by the user if this option exist.
         */
        if(model.getSelectedItem().toString() == "VAC√çO" || model.getSelectedItem().toString() == "APELLIDO"){
            JOptionPane.showMessageDialog(null, "No ha seleccionado una opci√≥n.");
        }else{
            String query = "SELECT DISTINCT * FROM empleado WHERE apellido = '"+model.getSelectedItem().toString()+"'";
            NavigationQuery.setQuery(query); 
            NavigationQuery.moveForward();
            showEmployee();
        }
    }//GEN-LAST:event_filterButtonNavActionPerformed

    private void goBackButtonNavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonNavActionPerformed
        /**
         * THis method call the method which contains in the NavigationQuery class
         * to move the resultset to the previous position in the cursor.
         */
        NavigationQuery.goBack();
        showEmployee();
    }//GEN-LAST:event_goBackButtonNavActionPerformed

    private void moveForwardButtonNavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveForwardButtonNavActionPerformed
        /**
         * THis method call the method which contains in the NavigationQuery class
         * to move the resultset to the next position in the cursor.
         */
        NavigationQuery.moveForward();
        showEmployee();

    }//GEN-LAST:event_moveForwardButtonNavActionPerformed

    private void surnamerComboBoxNavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surnamerComboBoxNavActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_surnamerComboBoxNavActionPerformed

    private void clearButtonNavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonNavActionPerformed
        /**
         * This method check if the filter has been selected and reset the information
         * and the combobox option.
         */
        if(model.getSelectedItem().toString() == "VAC√çO" || model.getSelectedItem().toString() == "APELLIDO"){
            JOptionPane.showMessageDialog(null, "El filtro ya est√° limpio.");
        }else{
            resetNavigation();
            surnamerComboBoxNav.setSelectedIndex(0);
        }
    }//GEN-LAST:event_clearButtonNavActionPerformed

    private DefaultComboBoxModel chargeSurnameFilter(){
        /**
         * This method charge in the comboBox model the word EMPTY if the data base
         * does not connect or the table of data base is empty or charge the comboBox
         * with the surnames of the table.
         * 
         * @return the model with the information charged.
         */
        if(myList == null){
            model.addElement("VAC√çO");
        }else{
            model.removeAllElements();
            model.addElement("APELLIDO");
            for(String surname : myList){
                model.addElement(surname);
            }
        }
        
        return model;
    }
    
    private void showEmployee(){
        /**
         * This method call the method of the NavigationQuery class which return
         * the current result set and show the information in the fields.
         */
        ResultSet rsetAux = NavigationQuery.getCurrent();
        
        try {
            numberLabelNav.setText(rsetAux.getString(1));
            nameFieldNav.setText(rsetAux.getString(2));
            surnameFieldNav.setText(rsetAux.getString(3));
            pictureLabetNav.setIcon(new ImageIcon("./Pictures/"+rsetAux.getString(4)));
            salaryFieldNav.setText(rsetAux.getString(5));
            maxSalaryFieldNav.setText(rsetAux.getString(6));
            entryDateFieldNav.setText(rsetAux.getString(7));
            
            moveForwardButtonNav.setEnabled(!NavigationQuery.isLast());
            goBackButtonNav.setEnabled(!NavigationQuery.isFirst());
        } catch (SQLException ex) {
            Logger.getLogger(NavigationPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    private void resetNavigation(){
        /**
         * This method send the default query to the data base that select all the
         * fields of the table.
         */
        NavigationQuery.setQuery("SELECT * FROM empleado ORDER BY numero");
        NavigationQuery.moveForward();
        showEmployee();
    }
    
    private ArrayList<String> myList = new ArrayList();
    private DefaultComboBoxModel<String> model;
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButtonNav;
    private javax.swing.JTextField entryDateFieldNav;
    private javax.swing.JLabel entryDateLabelNav;
    private javax.swing.JButton filterButtonNav;
    private javax.swing.JButton goBackButtonNav;
    private javax.swing.JLabel headerLabelNav;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField maxSalaryFieldNav;
    private javax.swing.JLabel maxSalaryLabelNav;
    private javax.swing.JButton moveForwardButtonNav;
    private javax.swing.JTextField nameFieldNav;
    private javax.swing.JLabel nameLabelNav;
    private javax.swing.JLabel numberLabelNav;
    private javax.swing.JLabel pictureLabetNav;
    private javax.swing.JTextField salaryFieldNav;
    private javax.swing.JLabel salaryLabelNav;
    private javax.swing.JTextField surnameFieldNav;
    private javax.swing.JLabel surnameLabelNav;
    private javax.swing.JComboBox<String> surnamerComboBoxNav;
    // End of variables declaration//GEN-END:variables
}
